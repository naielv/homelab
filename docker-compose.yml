version: '3'
services:
  os:
    image: ghcr.io/naielv/axelos:main
    ports:
      - 8099:80
  nginxproxymanager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /srv/local/appdata/nginxproxymanager/nginx_proxy_manager/data:/data
      - /srv/local/appdata/nginxproxymanager/nginx_proxy_manager/letsencrypt:/etc/letsencrypt
  jellyfin:
    image: jellyfin/jellyfin
    user: 0:0 # UserID:GroupID
    network_mode: 'host'
    volumes:
      - /srv/local/appdata/jellyfin/config:/config
      - /srv/local/appdata/jellyfin/cache:/cache
      - /srv/local/userdata/Media:/media
      # - ./volumes/immich/fotos/library:/photos:ro
    restart: 'unless-stopped'
    # Optional - alternative address used for autodiscovery
    # environment:
    #   - JELLYFIN_PublishedServerUrl=http://example.com
  nodered:
    ports:
      - 1888:1880
    volumes:
      - /srv/local/appdata/nodered/data:/data
    image: nodered/node-red
  odoo:
    image: odoo:17.0
    env_file: odoo.env
    networks:
      odoo:
    depends_on:
      - postgres
    ports:
      - "8069:8069"
    volumes:
      - /srv/local/appdata/odoo/data:/var/lib/odoo
  postgres:
    image: postgres:16
    env_file: odoo.env
    networks:
      odoo:
    volumes:
      - /srv/local/appdata/odoo/db:/var/lib/postgresql/data/pgdata
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - /srv/local/appdata/immich3/upload:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - immich.env
    ports:
      - 2283:3001
    depends_on:
      - redis
      - database
    restart: always

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:release
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - immich.env
    restart: always

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - /srv/local/appdata/immich3/super/db:/var/lib/postgresql/data
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always

volumes:
  model-cache:
networks:
  odoo:
